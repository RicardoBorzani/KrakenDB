Implement indexing and query optimization

Overview
This pull request aims to improve the performance of KrakenDB by implementing indexing and query optimization. Specifically, we will analyze the database schema to identify the most frequently accessed columns and tables, determine appropriate indexing strategies, and implement the identified indexes. We will also optimize queries to take advantage of the new indexes. Finally, we will write unit tests to ensure the proper functioning of the indexing and query optimization.

Tasks

1: Analyze the database schema and identify the most frequently accessed columns and tables.
 - Review the schema and identify tables and columns that are frequently accessed by queries.
 - Consider the types of queries that are executed against the database.
2: Determine appropriate indexing strategies for the identified columns and tables.
 - Choose the appropriate type of index for each column or table.
 - Consider the trade-offs between different types of indexes, such as B-tree, hash, and full-text indexes.
3: Implement the identified indexes and optimize queries accordingly.
 - Write SQL scripts to create the indexes.
 - Modify the queries to take advantage of the new indexes.
4: Write unit tests to ensure the proper functioning of the indexing and query optimization.
 - Write unit tests for each query that was optimized.
 - Ensure that the tests pass and that the queries return the expected results.

Documentation

Update the KrakenDB documentation with information about the indexing and query optimization features. Include:
 - Explanation of how indexing works and how it can improve performance.
 - Instructions on how to create indexes for columns and tables.
 - Examples of optimized queries and their performance improvements.
 - Instructions on how to write efficient queries.
 - Instructions on how to interpret query execution plans and identify performance bottlenecks.

Acceptance criteria
 - All identified columns and tables have appropriate indexes.
 - Queries are optimized to take advantage of the new indexes.
 - Unit tests for each optimized query pass and return the expected results.
 - The KrakenDB documentation is updated to include information about indexing and query optimization.
 - The pull request is approved by the project maintainer.
