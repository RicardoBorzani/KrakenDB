#32: KrakenDB-patch-1D Implement connection pooling and transaction management

This pull request aims to improve the performance and reliability of KrakenDB by implementing connection pooling and transaction management features. The following tasks were completed:

1: Research and choose a connection pooling library or framework that integrates well with KrakenDB.
 - Conduct research on connection pooling libraries/frameworks that are compatible with KrakenDB, such as HikariCP, Apache Commons DBCP, or C3P0.
 - Evaluate each option based on factors such as performance, ease of use, and community support.
 - Choose the best option based on your research.
2: Configure the connection pool settings for KrakenDB.
 - Set up the connection pool configuration file with the necessary parameters, such as maximum pool size, connection timeout, and idle connection time.
 - Ensure that the configuration file is easily modifiable to allow for future changes.
3: Write code to obtain and release connections from the pool.
 - Write functions to obtain and release connections from the connection pool, ensuring that the connections are properly closed and returned to the pool after use.
 - Implement error handling for situations where connections cannot be obtained or released from the pool.
 - Implement transaction management using the chosen library or framework.
4: Write functions to begin, commit, and rollback transactions using the chosen library or framework.
 - Ensure that transactions are properly managed and that any errors are handled appropriately.
 - Write unit tests for the connection pooling and transaction management functionality.
 - Write unit tests to verify that the connection pool is functioning properly and that connections are being obtained and released correctly.
5: Write unit tests to verify that transactions are being managed properly and that any errors are being handled appropriately.
 - Ensure that the tests cover all possible scenarios and edge cases.

Remember to document all the changes made, including any configuration settings and assumptions made during the implementation process. Also, ensure that the code is properly commented and formatted according to the project's style guidelines. Finally, submit the changes to the code repository and verify that the build is successful.
